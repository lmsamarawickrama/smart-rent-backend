spring.datasource.url= jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?allowPublicKeyRetrieval=true&useSSL=false&sessionVariables=sql_mode='NO_ENGINE_SUBSTITUTION'&jdbcCompliantTruncation=false
spring.datasource.driver-class-name= com.mysql.jdbc.Driver
spring.datasource.username= ${DATABASE_PASSWORD}
spring.datasource.password= ${DATABASE_USERNAME}

spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true

okta.client.orgUrl= ${OKTA_SMART_RENT_DOMAIN}
okta.client.token= ${OKTA_SMART_RENT_TOKEN}

okta.user.groups= {'ADMIN': '${OKTA_SMART_RENT_GROUP_ADMIN}'}

okta.oauth2.client-id= ${OKTA_SMART_RENT_ID}
okta.oauth2.client-secret= ${OKTA_SMART_RENT_SECRET}
okta.oauth2.issuer=provide
okta.oauth2.redirect-uri=provide

server.port=8082

spring.cloud.stream.bindings.user-requests-in.destination = user.requests
spring.cloud.stream.bindings.user-responses-out.destination = user.responses
spring.cloud.stream.bindings.create-rent-saga-out.destination = rent.create_rent_saga
spring.cloud.stream.bindings.create-rent-saga-out.producer.partition-key-expression = headers['partitionKey']
spring.cloud.stream.bindings.user-responses-out.producer.partition-count= 3
spring.cloud.stream.bindings.user-requests-in.group= user-service
spring.cloud.stream.bindings.user-requests-in.consumer.concurrency= 3